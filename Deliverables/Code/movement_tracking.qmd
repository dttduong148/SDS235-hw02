---
title: "csc 235 - hw2"
format: html
editor: visual
---

```{r}
library(readr)   # Run this if you haven't installed it yet
library(jpeg)
library(dplyr)
library(ggplot2)
library(av)
```

```{r}
sat_df <- read_csv("hw02-data/Movement Data/park-movement-Sat.csv")
```

```{r}
sat_subset <- sat_df
X <- sat_subset$X
Y <- sat_subset$Y
```

```{r}
#code to load jpeg file
img <- readJPEG("hw02-data/Auxiliary Files/Park Map.jpg")
```

```{r}
sat_data <- data.frame(X = X, Y = Y)
# create the ggplot
p <- ggplot() +
  annotation_raster(img, xmin = 0, xmax = 100, ymin = 0, ymax = 100) +
  geom_point(data = sat_data, aes(x = X, y = Y), color = "black", shape = 2, size = 3) +
  theme(panel.grid.major = element_line(color = "gray", size = 0.5),
        panel.grid.minor = element_blank()) +
  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +
  labs(x = NULL, y = NULL) +
  theme_minimal() + 
  theme(axis.text = element_blank(),
        axis.ticks = element_blank())
```

```{r}
p
```


```{r}
library(av)
#do animation for the whole park
sat_df$Time <- as.POSIXct(sat_df$Timestamp)
minutes <- lubridate::minutes(sat_df$Time)

p <- p + transition_time(minutes)

if (TRUE) {
# renderers are specified in the animate() function
animate(p, 
        renderer = av_renderer("animation_output_small.mp4"),  # Specify output file name
        duration = 10,  # total duration of the animation in seconds (adjust as needed)
        fps = 10)
}
```
```{r}
most_movement_id <- sat_df |>
  count(id) |>
  filter(n == max(n)) |>
  pull(id)

most_movement_id
```
```{r}
most_movement_data <- sat_df |>
  filter(id == 999107) 

max(most_movement_data$Timestamp)
```

```{r}
least_movement_id <- sat_df |>
  count(id) |>
  filter(n == min(n)) |>
  pull(id)

least_movement_id
```
```{r}
least_movement_data_sat <- sat_df |>
  filter(id == 657863) 

max(least_movement_data_sat$Timestamp)
```

```{r}
# create the ggplot
small_p <- ggplot() +
  annotation_raster(img, xmin = 0, xmax = 100, ymin = 0, ymax = 100) +
  geom_point(data = least_movement_data_sat, aes(x = X, y = Y), color = "black", shape = 2, size = 3) +
  theme(panel.grid.major = element_line(color = "gray", size = 0.5),
        panel.grid.minor = element_blank()) +
  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +
  labs(x = NULL, y = NULL) +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank())

```

```{r}
small_p
```
```{r}
fri_df <- read_csv('hw02-data/Movement Data/park-movement-Fri.csv')
```

```{r}
least_movement_id_fri <- fri_df |>
  count(id) |>
  filter(n == min(n)) |>
  pull(id)

least_movement_id_fri
```

```{r}
least_movement_data_fri <- fri_df |>
  filter(id == 657863) 

max(least_movement_data_fri$Timestamp)
```

```{r}
# Create the ggplot for friday data
small_p_fri <- ggplot() +
  annotation_raster(img, xmin = 0, xmax = 100, ymin = 0, ymax = 100) +
  geom_point(data = least_movement_data_fri, aes(x = X, y = Y), color = "black", shape = 2, size = 3) +
  theme(panel.grid.major = element_line(color = "gray", size = 0.5),
        panel.grid.minor = element_blank()) +
  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +
  labs(x = NULL, y = NULL) +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank())

```
```{r}
small_p_fri
```


```{r}
sun_df <- read_csv('hw02-data/Movement Data/park-movement-Sun.csv')
```

```{r}
least_movement_id_sun <- sun_df |>
  count(id) |>
  filter(n == min(n)) |>
  pull(id)

least_movement_id_sun
```

```{r}
# Find the second least movement ID
second_least_movement_id_sun <- sun_df |>
  count(id) |>
  arrange(n) |>
  slice(3) |>
  pull(id)

second_least_movement_id_sun
```

```{r}
least_movement_data_third_sun <- sun_df |>
  filter(id == 1983765)
```

```{r}
# Create the ggplot for sunday data
small_p_sun <- ggplot() +
  annotation_raster(img, xmin = 0, xmax = 100, ymin = 0, ymax = 100) +
  geom_point(data = least_movement_data_third_sun, aes(x = X, y = Y), color = "black", shape = 2, size = 3) +
  theme(panel.grid.major = element_line(color = "gray", size = 0.5),
        panel.grid.minor = element_blank()) +
  coord_fixed(xlim = c(0, 100), ylim = c(0, 100)) +
  labs(x = NULL, y = NULL) +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank())
```

```{r}
small_p_sun
```

```{r}
#Look at histogram 
row_counts_sat <- sat_df %>%
  group_by(id) %>%
  summarize(row_count = n())

#make a histogram
ggplot(row_counts, aes(x = row_count)) +
  geom_histogram(binwidth = 100, fill = 'blue', color = 'black', alpha = 0.7) +
  labs(title = 'Histogram of Row Counts on Saturday', x = 'Movement', y = 'Count') +
  theme_minimal()
```
```{r}
row_counts_fri <- fri_df %>%
  group_by(id) %>%
  summarize(row_count = n())

#make a histogram
ggplot(row_counts_fri, aes(x = row_count)) +
  geom_histogram(binwidth = 100, fill = 'blue', color = 'black', alpha = 0.7) +
  labs(title = 'Histogram of Row Counts on Friday', x = 'Movement', y = 'Count') +
  theme_minimal()
```
```{r}
row_counts_sun <- sun_df %>%
  group_by(id) %>%
  summarize(row_count = n())

#make a histogram for Saturday
ggplot(row_counts_sun, aes(x = row_count)) +
  geom_histogram(binwidth = 100, fill = 'blue', color = 'black', alpha = 0.7) +
  labs(title = 'Histogram of Row Counts on Sunday', x = 'Movement', y = 'Count') +
  theme_minimal()
```

